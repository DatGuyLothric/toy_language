language				-> expression+
expression				-> assign_expression | conditional_expression | loop_expression | print_expression | list_init | hashtable_init | type_operation

assign_expression		-> VAR ASSIGN_OP arithmetical_expression EOE
conditional_expression	-> IF LP logical_expression RP LB expression* RB (ELSE LB expression* RB)?
loop_expression			-> WHILE LP logical_expression RB LB expression* RB
print_expression		-> PRINT LP arithmetical_expression RP EOE
type_operation			-> insert | delete

arithmetical_expression	-> value (OP value)* 
value					-> VAR | DIGIT | parentheses_expression | count | get
parentheses_expression	-> LP arithmetical_expression RP
logical_expression		-> arithmetical_expression COMPARISON_OP arithmetical_expression
list_init				-> LIST VAR EOE
hashtable_init			-> HASHTABLE VAR EOE
insert					-> INSERT arithmetical_expression INTO VAR ON arithmetical_expression EOE
delete					-> DELETE arithmetical_expression FROM VAR EOE
get						-> GET arithmetical_expression FROM VAR
count					-> COUNTOF VAR

VAR						-> @"^([A-z]+)$"
DIGIT					-> @"^(0|[1-9][0-9]*)$"
RP						-> @"^\)$"
LP						-> @"^\($"
OP						-> @"^(\+|-|\*|\/)$"
ASSIGN_OP				-> @"^=$"
COMPARISON_OP			-> @"^(==|!=|>|<|>=|<=)$"
RB						-> @"^\}$"
LB						-> @"^\{$"
IF						-> @"^if$"
ELSE					-> @"^else$"
WHILE					-> @"^while$"
PRINT					-> @"^print$"
LIST					-> @"^list$"
HASHTABLE				-> @"^hashtable$"
INSERT					-> @"^insert$"
INTO					-> @"^into$"
DELETE					-> @"^delete$"
FROM					-> @"^from$"
GET						-> @"^get$"
COUNTOF					-> @"^countof$"
ON						-> @"^on$"
EOE						-> @"^;$"